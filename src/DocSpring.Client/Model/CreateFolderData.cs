/*
 * API v1
 *
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DocSpring.Client.Client.OpenAPIDateConverter;

namespace DocSpring.Client.Model
{
    /// <summary>
    /// CreateFolderData
    /// </summary>
    [DataContract(Name = "create_folder_data")]
    public partial class CreateFolderData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateFolderData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateFolderData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateFolderData" /> class.
        /// </summary>
        /// <param name="folder">folder (required).</param>
        public CreateFolderData(CreateFolderAttributes folder = default(CreateFolderAttributes))
        {
            // to ensure "folder" is required (not null)
            if (folder == null)
            {
                throw new ArgumentNullException("folder is a required property for CreateFolderData and cannot be null");
            }
            this.Folder = folder;
        }

        /// <summary>
        /// Gets or Sets Folder
        /// </summary>
        [DataMember(Name = "folder", IsRequired = true, EmitDefaultValue = true)]
        public CreateFolderAttributes Folder { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateFolderData {\n");
            sb.Append("  Folder: ").Append(Folder).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
