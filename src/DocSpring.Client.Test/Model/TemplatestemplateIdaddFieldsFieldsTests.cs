/* 
 * API v1
 *
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DocSpring.Client.Api;
using DocSpring.Client.Model;
using DocSpring.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DocSpring.Client.Test
{
    /// <summary>
    ///  Class for testing TemplatestemplateIdaddFieldsFields
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TemplatestemplateIdaddFieldsFieldsTests
    {
        // TODO uncomment below to declare an instance variable for TemplatestemplateIdaddFieldsFields
        //private TemplatestemplateIdaddFieldsFields instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TemplatestemplateIdaddFieldsFields
            //instance = new TemplatestemplateIdaddFieldsFields();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TemplatestemplateIdaddFieldsFields
        /// </summary>
        [Test]
        public void TemplatestemplateIdaddFieldsFieldsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TemplatestemplateIdaddFieldsFields
            //Assert.IsInstanceOfType<TemplatestemplateIdaddFieldsFields> (instance, "variable 'instance' is a TemplatestemplateIdaddFieldsFields");
        }


        /// <summary>
        /// Test the property 'BackgroundColorFieldName'
        /// </summary>
        [Test]
        public void BackgroundColorFieldNameTest()
        {
            // TODO unit test for the property 'BackgroundColorFieldName'
        }
        /// <summary>
        /// Test the property 'Uppercase'
        /// </summary>
        [Test]
        public void UppercaseTest()
        {
            // TODO unit test for the property 'Uppercase'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Test]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'BarcodeSymbology'
        /// </summary>
        [Test]
        public void BarcodeSymbologyTest()
        {
            // TODO unit test for the property 'BarcodeSymbology'
        }
        /// <summary>
        /// Test the property 'MinLength'
        /// </summary>
        [Test]
        public void MinLengthTest()
        {
            // TODO unit test for the property 'MinLength'
        }
        /// <summary>
        /// Test the property 'Integer'
        /// </summary>
        [Test]
        public void IntegerTest()
        {
            // TODO unit test for the property 'Integer'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Required'
        /// </summary>
        [Test]
        public void RequiredTest()
        {
            // TODO unit test for the property 'Required'
        }
        /// <summary>
        /// Test the property 'CombValueOffset'
        /// </summary>
        [Test]
        public void CombValueOffsetTest()
        {
            // TODO unit test for the property 'CombValueOffset'
        }
        /// <summary>
        /// Test the property 'ImageGravity'
        /// </summary>
        [Test]
        public void ImageGravityTest()
        {
            // TODO unit test for the property 'ImageGravity'
        }
        /// <summary>
        /// Test the property 'Overflow'
        /// </summary>
        [Test]
        public void OverflowTest()
        {
            // TODO unit test for the property 'Overflow'
        }
        /// <summary>
        /// Test the property 'QrcodeColor'
        /// </summary>
        [Test]
        public void QrcodeColorTest()
        {
            // TODO unit test for the property 'QrcodeColor'
        }
        /// <summary>
        /// Test the property 'ColorFieldRequired'
        /// </summary>
        [Test]
        public void ColorFieldRequiredTest()
        {
            // TODO unit test for the property 'ColorFieldRequired'
        }
        /// <summary>
        /// Test the property 'BackgroundColorFieldRequired'
        /// </summary>
        [Test]
        public void BackgroundColorFieldRequiredTest()
        {
            // TODO unit test for the property 'BackgroundColorFieldRequired'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'ImageScaleType'
        /// </summary>
        [Test]
        public void ImageScaleTypeTest()
        {
            // TODO unit test for the property 'ImageScaleType'
        }
        /// <summary>
        /// Test the property 'ExclusiveMinimum'
        /// </summary>
        [Test]
        public void ExclusiveMinimumTest()
        {
            // TODO unit test for the property 'ExclusiveMinimum'
        }
        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Test]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }
        /// <summary>
        /// Test the property 'NumberConditionRangeExclusiveMax'
        /// </summary>
        [Test]
        public void NumberConditionRangeExclusiveMaxTest()
        {
            // TODO unit test for the property 'NumberConditionRangeExclusiveMax'
        }
        /// <summary>
        /// Test the property 'InvertBooleanCondition'
        /// </summary>
        [Test]
        public void InvertBooleanConditionTest()
        {
            // TODO unit test for the property 'InvertBooleanCondition'
        }
        /// <summary>
        /// Test the property 'ShapeFillColorFieldName'
        /// </summary>
        [Test]
        public void ShapeFillColorFieldNameTest()
        {
            // TODO unit test for the property 'ShapeFillColorFieldName'
        }
        /// <summary>
        /// Test the property 'Static'
        /// </summary>
        [Test]
        public void StaticTest()
        {
            // TODO unit test for the property 'Static'
        }
        /// <summary>
        /// Test the property 'ShapeBorderColorFieldName'
        /// </summary>
        [Test]
        public void ShapeBorderColorFieldNameTest()
        {
            // TODO unit test for the property 'ShapeBorderColorFieldName'
        }
        /// <summary>
        /// Test the property 'VAlignment'
        /// </summary>
        [Test]
        public void VAlignmentTest()
        {
            // TODO unit test for the property 'VAlignment'
        }
        /// <summary>
        /// Test the property 'Bold'
        /// </summary>
        [Test]
        public void BoldTest()
        {
            // TODO unit test for the property 'Bold'
        }
        /// <summary>
        /// Test the property 'ShapeBorderWidth'
        /// </summary>
        [Test]
        public void ShapeBorderWidthTest()
        {
            // TODO unit test for the property 'ShapeBorderWidth'
        }
        /// <summary>
        /// Test the property 'CombNumberOfCells'
        /// </summary>
        [Test]
        public void CombNumberOfCellsTest()
        {
            // TODO unit test for the property 'CombNumberOfCells'
        }
        /// <summary>
        /// Test the property 'ShapeBorderColor'
        /// </summary>
        [Test]
        public void ShapeBorderColorTest()
        {
            // TODO unit test for the property 'ShapeBorderColor'
        }
        /// <summary>
        /// Test the property 'Comb'
        /// </summary>
        [Test]
        public void CombTest()
        {
            // TODO unit test for the property 'Comb'
        }
        /// <summary>
        /// Test the property 'Typeface'
        /// </summary>
        [Test]
        public void TypefaceTest()
        {
            // TODO unit test for the property 'Typeface'
        }
        /// <summary>
        /// Test the property 'ShapeType'
        /// </summary>
        [Test]
        public void ShapeTypeTest()
        {
            // TODO unit test for the property 'ShapeType'
        }
        /// <summary>
        /// Test the property 'Condition'
        /// </summary>
        [Test]
        public void ConditionTest()
        {
            // TODO unit test for the property 'Condition'
        }
        /// <summary>
        /// Test the property 'DisplayType'
        /// </summary>
        [Test]
        public void DisplayTypeTest()
        {
            // TODO unit test for the property 'DisplayType'
        }
        /// <summary>
        /// Test the property 'CheckColor'
        /// </summary>
        [Test]
        public void CheckColorTest()
        {
            // TODO unit test for the property 'CheckColor'
        }
        /// <summary>
        /// Test the property 'MultilineLines'
        /// </summary>
        [Test]
        public void MultilineLinesTest()
        {
            // TODO unit test for the property 'MultilineLines'
        }
        /// <summary>
        /// Test the property 'Multiline'
        /// </summary>
        [Test]
        public void MultilineTest()
        {
            // TODO unit test for the property 'Multiline'
        }
        /// <summary>
        /// Test the property 'TrueText'
        /// </summary>
        [Test]
        public void TrueTextTest()
        {
            // TODO unit test for the property 'TrueText'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'FontSize'
        /// </summary>
        [Test]
        public void FontSizeTest()
        {
            // TODO unit test for the property 'FontSize'
        }
        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Test]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }
        /// <summary>
        /// Test the property 'Alignment'
        /// </summary>
        [Test]
        public void AlignmentTest()
        {
            // TODO unit test for the property 'Alignment'
        }
        /// <summary>
        /// Test the property 'MaxLength'
        /// </summary>
        [Test]
        public void MaxLengthTest()
        {
            // TODO unit test for the property 'MaxLength'
        }
        /// <summary>
        /// Test the property 'AutoCalculateMaxLength'
        /// </summary>
        [Test]
        public void AutoCalculateMaxLengthTest()
        {
            // TODO unit test for the property 'AutoCalculateMaxLength'
        }
        /// <summary>
        /// Test the property 'ColorFieldName'
        /// </summary>
        [Test]
        public void ColorFieldNameTest()
        {
            // TODO unit test for the property 'ColorFieldName'
        }
        /// <summary>
        /// Test the property 'QrcodeColorFieldName'
        /// </summary>
        [Test]
        public void QrcodeColorFieldNameTest()
        {
            // TODO unit test for the property 'QrcodeColorFieldName'
        }
        /// <summary>
        /// Test the property 'NumberConditionRangeMin'
        /// </summary>
        [Test]
        public void NumberConditionRangeMinTest()
        {
            // TODO unit test for the property 'NumberConditionRangeMin'
        }
        /// <summary>
        /// Test the property 'Color'
        /// </summary>
        [Test]
        public void ColorTest()
        {
            // TODO unit test for the property 'Color'
        }
        /// <summary>
        /// Test the property 'Hidden'
        /// </summary>
        [Test]
        public void HiddenTest()
        {
            // TODO unit test for the property 'Hidden'
        }
        /// <summary>
        /// Test the property 'CheckColorFieldRequired'
        /// </summary>
        [Test]
        public void CheckColorFieldRequiredTest()
        {
            // TODO unit test for the property 'CheckColorFieldRequired'
        }
        /// <summary>
        /// Test the property 'CombinedFieldFormat'
        /// </summary>
        [Test]
        public void CombinedFieldFormatTest()
        {
            // TODO unit test for the property 'CombinedFieldFormat'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'ShapeBorderColorFieldRequired'
        /// </summary>
        [Test]
        public void ShapeBorderColorFieldRequiredTest()
        {
            // TODO unit test for the property 'ShapeBorderColorFieldRequired'
        }
        /// <summary>
        /// Test the property 'CombinedFieldNames'
        /// </summary>
        [Test]
        public void CombinedFieldNamesTest()
        {
            // TODO unit test for the property 'CombinedFieldNames'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'NumberConditionRangeExclusiveMin'
        /// </summary>
        [Test]
        public void NumberConditionRangeExclusiveMinTest()
        {
            // TODO unit test for the property 'NumberConditionRangeExclusiveMin'
        }
        /// <summary>
        /// Test the property 'CombinedFieldSeparator'
        /// </summary>
        [Test]
        public void CombinedFieldSeparatorTest()
        {
            // TODO unit test for the property 'CombinedFieldSeparator'
        }
        /// <summary>
        /// Test the property 'ExclusiveMaximum'
        /// </summary>
        [Test]
        public void ExclusiveMaximumTest()
        {
            // TODO unit test for the property 'ExclusiveMaximum'
        }
        /// <summary>
        /// Test the property 'Default'
        /// </summary>
        [Test]
        public void DefaultTest()
        {
            // TODO unit test for the property 'Default'
        }
        /// <summary>
        /// Test the property 'CombinedFieldType'
        /// </summary>
        [Test]
        public void CombinedFieldTypeTest()
        {
            // TODO unit test for the property 'CombinedFieldType'
        }
        /// <summary>
        /// Test the property 'DateTimeFormat'
        /// </summary>
        [Test]
        public void DateTimeFormatTest()
        {
            // TODO unit test for the property 'DateTimeFormat'
        }
        /// <summary>
        /// Test the property 'QrcodeColorFieldRequired'
        /// </summary>
        [Test]
        public void QrcodeColorFieldRequiredTest()
        {
            // TODO unit test for the property 'QrcodeColorFieldRequired'
        }
        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Test]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }
        /// <summary>
        /// Test the property 'FalseText'
        /// </summary>
        [Test]
        public void FalseTextTest()
        {
            // TODO unit test for the property 'FalseText'
        }
        /// <summary>
        /// Test the property 'Strikethrough'
        /// </summary>
        [Test]
        public void StrikethroughTest()
        {
            // TODO unit test for the property 'Strikethrough'
        }
        /// <summary>
        /// Test the property 'CharacterSpacing'
        /// </summary>
        [Test]
        public void CharacterSpacingTest()
        {
            // TODO unit test for the property 'CharacterSpacing'
        }
        /// <summary>
        /// Test the property 'NumberConditionRangeMax'
        /// </summary>
        [Test]
        public void NumberConditionRangeMaxTest()
        {
            // TODO unit test for the property 'NumberConditionRangeMax'
        }
        /// <summary>
        /// Test the property 'BackgroundColor'
        /// </summary>
        [Test]
        public void BackgroundColorTest()
        {
            // TODO unit test for the property 'BackgroundColor'
        }
        /// <summary>
        /// Test the property 'CheckColorFieldName'
        /// </summary>
        [Test]
        public void CheckColorFieldNameTest()
        {
            // TODO unit test for the property 'CheckColorFieldName'
        }
        /// <summary>
        /// Test the property 'CheckCharacter'
        /// </summary>
        [Test]
        public void CheckCharacterTest()
        {
            // TODO unit test for the property 'CheckCharacter'
        }
        /// <summary>
        /// Test the property 'Rotation'
        /// </summary>
        [Test]
        public void RotationTest()
        {
            // TODO unit test for the property 'Rotation'
        }
        /// <summary>
        /// Test the property 'OptionList'
        /// </summary>
        [Test]
        public void OptionListTest()
        {
            // TODO unit test for the property 'OptionList'
        }
        /// <summary>
        /// Test the property 'ShapeFillColor'
        /// </summary>
        [Test]
        public void ShapeFillColorTest()
        {
            // TODO unit test for the property 'ShapeFillColor'
        }
        /// <summary>
        /// Test the property 'StringConditionType'
        /// </summary>
        [Test]
        public void StringConditionTypeTest()
        {
            // TODO unit test for the property 'StringConditionType'
        }
        /// <summary>
        /// Test the property 'ShapeFillColorFieldRequired'
        /// </summary>
        [Test]
        public void ShapeFillColorFieldRequiredTest()
        {
            // TODO unit test for the property 'ShapeFillColorFieldRequired'
        }
        /// <summary>
        /// Test the property 'DecimalPlaces'
        /// </summary>
        [Test]
        public void DecimalPlacesTest()
        {
            // TODO unit test for the property 'DecimalPlaces'
        }
        /// <summary>
        /// Test the property 'IncludeTime'
        /// </summary>
        [Test]
        public void IncludeTimeTest()
        {
            // TODO unit test for the property 'IncludeTime'
        }
        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Test]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }
        /// <summary>
        /// Test the property 'X'
        /// </summary>
        [Test]
        public void XTest()
        {
            // TODO unit test for the property 'X'
        }
        /// <summary>
        /// Test the property 'Maximum'
        /// </summary>
        [Test]
        public void MaximumTest()
        {
            // TODO unit test for the property 'Maximum'
        }
        /// <summary>
        /// Test the property 'Y'
        /// </summary>
        [Test]
        public void YTest()
        {
            // TODO unit test for the property 'Y'
        }
        /// <summary>
        /// Test the property 'SignatureAllowDraw'
        /// </summary>
        [Test]
        public void SignatureAllowDrawTest()
        {
            // TODO unit test for the property 'SignatureAllowDraw'
        }
        /// <summary>
        /// Test the property 'NumberConditionType'
        /// </summary>
        [Test]
        public void NumberConditionTypeTest()
        {
            // TODO unit test for the property 'NumberConditionType'
        }
        /// <summary>
        /// Test the property 'Opacity'
        /// </summary>
        [Test]
        public void OpacityTest()
        {
            // TODO unit test for the property 'Opacity'
        }
        /// <summary>
        /// Test the property 'Minimum'
        /// </summary>
        [Test]
        public void MinimumTest()
        {
            // TODO unit test for the property 'Minimum'
        }
        /// <summary>
        /// Test the property 'SignatureAllowType'
        /// </summary>
        [Test]
        public void SignatureAllowTypeTest()
        {
            // TODO unit test for the property 'SignatureAllowType'
        }

    }

}
